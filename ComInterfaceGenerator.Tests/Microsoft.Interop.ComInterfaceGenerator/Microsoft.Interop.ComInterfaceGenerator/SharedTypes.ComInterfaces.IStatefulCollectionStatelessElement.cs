// <auto-generated />
#pragma warning disable CS0612, CS0618
file unsafe class InterfaceInformation : System.Runtime.InteropServices.Marshalling.IIUnknownInterfaceType
{
    public static System.Guid Iid { get; } = new(new System.ReadOnlySpan<byte>(new byte[] { 124, 183, 82, 10, 139, 224, 116, 66, 161, 244, 26, 43, 242, 192, 126, 96 }));

    private static void** _vtable;
    public static void** ManagedVirtualMethodTable => _vtable != null ? _vtable : (_vtable = InterfaceImplementation.CreateManagedVirtualFunctionTable());
}

[System.Runtime.InteropServices.DynamicInterfaceCastableImplementationAttribute]
file unsafe partial interface InterfaceImplementation : global::SharedTypes.ComInterfaces.IStatefulCollectionStatelessElement
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.ComInterfaceGenerator", "42.42.42.42")]
    [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
    void global::SharedTypes.ComInterfaces.IStatefulCollectionStatelessElement.Method(global::SharedTypes.ComInterfaces.StatefulCollection<global::SharedTypes.ComInterfaces.StatelessType> p, int size)
    {
        var(__this, __vtable_native) = ((System.Runtime.InteropServices.Marshalling.IUnmanagedVirtualMethodTableProvider)this).GetVirtualMethodTableInfoForKey(typeof(global::SharedTypes.ComInterfaces.IStatefulCollectionStatelessElement));
        byte* __p_native = default;
        int __invokeRetVal = default;
        // Setup - Perform required setup.
        scoped global::SharedTypes.ComInterfaces.StatefulCollectionMarshaller<global::SharedTypes.ComInterfaces.StatelessType, nint>.Default __p_native__marshaller = new();
        int __p_native__numElements;
        int __p_native__lastIndexMarshalled = 0;
        System.Runtime.CompilerServices.Unsafe.SkipInit(out __p_native__numElements);
        try
        {
            // Marshal - Convert managed data to native data.
            __p_native__marshaller.FromManaged(p);
            {
                System.ReadOnlySpan<global::SharedTypes.ComInterfaces.StatelessType> __p_native__managedSpan = __p_native__marshaller.GetManagedValuesSource();
                System.Span<nint> __p_native__nativeSpan = __p_native__marshaller.GetUnmanagedValuesDestination();
                for (int __i0 = 0; __i0 < __p_native__managedSpan.Length; ++__i0, ++__p_native__lastIndexMarshalled)
                {
                    __p_native__nativeSpan[__i0] = global::SharedTypes.ComInterfaces.StatelessTypeMarshaller.ConvertToUnmanaged(__p_native__managedSpan[__i0]);
                }
            }

            {
                // PinnedMarshal - Convert managed data to native data that requires the managed data to be pinned.
                __p_native = __p_native__marshaller.ToUnmanaged();
                __invokeRetVal = ((delegate* unmanaged[MemberFunction]<void*, byte*, int, int> )__vtable_native[3])(__this, __p_native, size);
            }

            System.GC.KeepAlive(this);
            // Unmarshal - Convert native data to managed data.
            System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(__invokeRetVal);
        }
        finally
        {
            // Cleanup - Perform required cleanup.
            {
                System.ReadOnlySpan<nint> __p_native__nativeSpan = __p_native__marshaller.GetUnmanagedValuesDestination();
                for (int __i0 = 0; __i0 < __p_native__lastIndexMarshalled; ++__i0)
                {
                    global::SharedTypes.ComInterfaces.StatelessTypeMarshaller.Free(__p_native__nativeSpan[__i0]);
                }
            }

            __p_native__marshaller.Free();
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.ComInterfaceGenerator", "42.42.42.42")]
    [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
    void global::SharedTypes.ComInterfaces.IStatefulCollectionStatelessElement.MethodIn(in global::SharedTypes.ComInterfaces.StatefulCollection<global::SharedTypes.ComInterfaces.StatelessType> pIn, in int size)
    {
        var(__this, __vtable_native) = ((System.Runtime.InteropServices.Marshalling.IUnmanagedVirtualMethodTableProvider)this).GetVirtualMethodTableInfoForKey(typeof(global::SharedTypes.ComInterfaces.IStatefulCollectionStatelessElement));
        byte* __pIn_native = default;
        int __invokeRetVal = default;
        // Setup - Perform required setup.
        scoped global::SharedTypes.ComInterfaces.StatefulCollectionMarshaller<global::SharedTypes.ComInterfaces.StatelessType, nint>.Default __pIn_native__marshaller = new();
        int __pIn_native__numElements;
        int __pIn_native__lastIndexMarshalled = 0;
        System.Runtime.CompilerServices.Unsafe.SkipInit(out __pIn_native__numElements);
        try
        {
            // Marshal - Convert managed data to native data.
            __pIn_native__marshaller.FromManaged(pIn);
            {
                System.ReadOnlySpan<global::SharedTypes.ComInterfaces.StatelessType> __pIn_native__managedSpan = __pIn_native__marshaller.GetManagedValuesSource();
                System.Span<nint> __pIn_native__nativeSpan = __pIn_native__marshaller.GetUnmanagedValuesDestination();
                for (int __i0 = 0; __i0 < __pIn_native__managedSpan.Length; ++__i0, ++__pIn_native__lastIndexMarshalled)
                {
                    __pIn_native__nativeSpan[__i0] = global::SharedTypes.ComInterfaces.StatelessTypeMarshaller.ConvertToUnmanaged(__pIn_native__managedSpan[__i0]);
                }
            }

            // Pin - Pin data in preparation for calling the P/Invoke.
            fixed (int* __size_native = &size)
            {
                // PinnedMarshal - Convert managed data to native data that requires the managed data to be pinned.
                __pIn_native = __pIn_native__marshaller.ToUnmanaged();
                __invokeRetVal = ((delegate* unmanaged[MemberFunction]<void*, byte**, int*, int> )__vtable_native[4])(__this, &__pIn_native, __size_native);
            }

            System.GC.KeepAlive(this);
            // Unmarshal - Convert native data to managed data.
            System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(__invokeRetVal);
        }
        finally
        {
            // Cleanup - Perform required cleanup.
            {
                System.ReadOnlySpan<nint> __pIn_native__nativeSpan = __pIn_native__marshaller.GetUnmanagedValuesDestination();
                for (int __i0 = 0; __i0 < __pIn_native__lastIndexMarshalled; ++__i0)
                {
                    global::SharedTypes.ComInterfaces.StatelessTypeMarshaller.Free(__pIn_native__nativeSpan[__i0]);
                }
            }

            __pIn_native__marshaller.Free();
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.ComInterfaceGenerator", "42.42.42.42")]
    [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
    void global::SharedTypes.ComInterfaces.IStatefulCollectionStatelessElement.MethodRef(ref global::SharedTypes.ComInterfaces.StatefulCollection<global::SharedTypes.ComInterfaces.StatelessType> pRef, int size)
    {
        var(__this, __vtable_native) = ((System.Runtime.InteropServices.Marshalling.IUnmanagedVirtualMethodTableProvider)this).GetVirtualMethodTableInfoForKey(typeof(global::SharedTypes.ComInterfaces.IStatefulCollectionStatelessElement));
        byte* __pRef_native = default;
        int __invokeRetVal = default;
        // Setup - Perform required setup.
        scoped global::SharedTypes.ComInterfaces.StatefulCollectionMarshaller<global::SharedTypes.ComInterfaces.StatelessType, nint>.Default __pRef_native__marshaller = new();
        int __pRef_native__numElements;
        int __pRef_native__lastIndexMarshalled = 0;
        System.Runtime.CompilerServices.Unsafe.SkipInit(out __pRef_native__numElements);
        try
        {
            // Marshal - Convert managed data to native data.
            __pRef_native__marshaller.FromManaged(pRef);
            {
                System.ReadOnlySpan<global::SharedTypes.ComInterfaces.StatelessType> __pRef_native__managedSpan = __pRef_native__marshaller.GetManagedValuesSource();
                System.Span<nint> __pRef_native__nativeSpan = __pRef_native__marshaller.GetUnmanagedValuesDestination();
                for (int __i0 = 0; __i0 < __pRef_native__managedSpan.Length; ++__i0, ++__pRef_native__lastIndexMarshalled)
                {
                    __pRef_native__nativeSpan[__i0] = global::SharedTypes.ComInterfaces.StatelessTypeMarshaller.ConvertToUnmanaged(__pRef_native__managedSpan[__i0]);
                }
            }

            {
                // PinnedMarshal - Convert managed data to native data that requires the managed data to be pinned.
                __pRef_native = __pRef_native__marshaller.ToUnmanaged();
                __invokeRetVal = ((delegate* unmanaged[MemberFunction]<void*, byte**, int, int> )__vtable_native[5])(__this, &__pRef_native, size);
            }

            System.GC.KeepAlive(this);
            // UnmarshalCapture - Capture the native data into marshaller instances in case conversion to managed data throws an exception.
            __pRef_native__marshaller.FromUnmanaged(__pRef_native);
            // Unmarshal - Convert native data to managed data.
            System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(__invokeRetVal);
            __pRef_native__numElements = size;
            {
                System.ReadOnlySpan<nint> __pRef_native__nativeSpan = __pRef_native__marshaller.GetUnmanagedValuesSource(__pRef_native__numElements);
                System.Span<global::SharedTypes.ComInterfaces.StatelessType> __pRef_native__managedSpan = __pRef_native__marshaller.GetManagedValuesDestination(__pRef_native__numElements);
                for (int __i0 = 0; __i0 < __pRef_native__numElements; ++__i0)
                {
                    __pRef_native__managedSpan[__i0] = global::SharedTypes.ComInterfaces.StatelessTypeMarshaller.ConvertToManaged(__pRef_native__nativeSpan[__i0]);
                }
            }

            pRef = __pRef_native__marshaller.ToManaged();
        }
        finally
        {
            // Cleanup - Perform required cleanup.
            {
                System.ReadOnlySpan<nint> __pRef_native__nativeSpan = __pRef_native__marshaller.GetUnmanagedValuesDestination();
                for (int __i0 = 0; __i0 < __pRef_native__lastIndexMarshalled; ++__i0)
                {
                    global::SharedTypes.ComInterfaces.StatelessTypeMarshaller.Free(__pRef_native__nativeSpan[__i0]);
                }
            }

            __pRef_native__marshaller.Free();
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.ComInterfaceGenerator", "42.42.42.42")]
    [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
    void global::SharedTypes.ComInterfaces.IStatefulCollectionStatelessElement.MethodOut(out global::SharedTypes.ComInterfaces.StatefulCollection<global::SharedTypes.ComInterfaces.StatelessType> pOut, out int size)
    {
        var(__this, __vtable_native) = ((System.Runtime.InteropServices.Marshalling.IUnmanagedVirtualMethodTableProvider)this).GetVirtualMethodTableInfoForKey(typeof(global::SharedTypes.ComInterfaces.IStatefulCollectionStatelessElement));
        System.Runtime.CompilerServices.Unsafe.SkipInit(out pOut);
        System.Runtime.CompilerServices.Unsafe.SkipInit(out size);
        byte* __pOut_native;
        int __invokeRetVal;
        // Setup - Perform required setup.
        scoped global::SharedTypes.ComInterfaces.StatefulCollectionMarshaller<global::SharedTypes.ComInterfaces.StatelessType, nint>.Default __pOut_native__marshaller = new();
        int __pOut_native__numElements;
        System.Runtime.CompilerServices.Unsafe.SkipInit(out __pOut_native__numElements);
        // Pin - Pin data in preparation for calling the P/Invoke.
        fixed (int* __size_native = &size)
        {
            __invokeRetVal = ((delegate* unmanaged[MemberFunction]<void*, byte**, int*, int> )__vtable_native[6])(__this, &__pOut_native, __size_native);
        }

        System.GC.KeepAlive(this);
        // UnmarshalCapture - Capture the native data into marshaller instances in case conversion to managed data throws an exception.
        __pOut_native__marshaller.FromUnmanaged(__pOut_native);
        // Unmarshal - Convert native data to managed data.
        System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(__invokeRetVal);
        __pOut_native__numElements = size;
        {
            System.ReadOnlySpan<nint> __pOut_native__nativeSpan = __pOut_native__marshaller.GetUnmanagedValuesSource(__pOut_native__numElements);
            System.Span<global::SharedTypes.ComInterfaces.StatelessType> __pOut_native__managedSpan = __pOut_native__marshaller.GetManagedValuesDestination(__pOut_native__numElements);
            for (int __i0 = 0; __i0 < __pOut_native__numElements; ++__i0)
            {
                __pOut_native__managedSpan[__i0] = global::SharedTypes.ComInterfaces.StatelessTypeMarshaller.ConvertToManaged(__pOut_native__nativeSpan[__i0]);
            }
        }

        pOut = __pOut_native__marshaller.ToManaged();
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.ComInterfaceGenerator", "42.42.42.42")]
    [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
    global::SharedTypes.ComInterfaces.StatefulCollection<global::SharedTypes.ComInterfaces.StatelessType> global::SharedTypes.ComInterfaces.IStatefulCollectionStatelessElement.Return(int size)
    {
        var(__this, __vtable_native) = ((System.Runtime.InteropServices.Marshalling.IUnmanagedVirtualMethodTableProvider)this).GetVirtualMethodTableInfoForKey(typeof(global::SharedTypes.ComInterfaces.IStatefulCollectionStatelessElement));
        global::SharedTypes.ComInterfaces.StatefulCollection<global::SharedTypes.ComInterfaces.StatelessType> __retVal;
        byte* __retVal_native;
        int __invokeRetVal;
        // Setup - Perform required setup.
        scoped global::SharedTypes.ComInterfaces.StatefulCollectionMarshaller<global::SharedTypes.ComInterfaces.StatelessType, nint>.Default __retVal_native__marshaller = new();
        int __retVal_native__numElements;
        System.Runtime.CompilerServices.Unsafe.SkipInit(out __retVal_native__numElements);
        {
            __invokeRetVal = ((delegate* unmanaged[MemberFunction]<void*, int, byte**, int> )__vtable_native[7])(__this, size, &__retVal_native);
        }

        System.GC.KeepAlive(this);
        // UnmarshalCapture - Capture the native data into marshaller instances in case conversion to managed data throws an exception.
        __retVal_native__marshaller.FromUnmanaged(__retVal_native);
        // Unmarshal - Convert native data to managed data.
        System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(__invokeRetVal);
        __retVal_native__numElements = size;
        {
            System.ReadOnlySpan<nint> __retVal_native__nativeSpan = __retVal_native__marshaller.GetUnmanagedValuesSource(__retVal_native__numElements);
            System.Span<global::SharedTypes.ComInterfaces.StatelessType> __retVal_native__managedSpan = __retVal_native__marshaller.GetManagedValuesDestination(__retVal_native__numElements);
            for (int __i0 = 0; __i0 < __retVal_native__numElements; ++__i0)
            {
                __retVal_native__managedSpan[__i0] = global::SharedTypes.ComInterfaces.StatelessTypeMarshaller.ConvertToManaged(__retVal_native__nativeSpan[__i0]);
            }
        }

        __retVal = __retVal_native__marshaller.ToManaged();
        return __retVal;
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.ComInterfaceGenerator", "42.42.42.42")]
    [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
    global::SharedTypes.ComInterfaces.StatefulCollection<global::SharedTypes.ComInterfaces.StatelessType> global::SharedTypes.ComInterfaces.IStatefulCollectionStatelessElement.ReturnPreserveSig(int size)
    {
        var(__this, __vtable_native) = ((System.Runtime.InteropServices.Marshalling.IUnmanagedVirtualMethodTableProvider)this).GetVirtualMethodTableInfoForKey(typeof(global::SharedTypes.ComInterfaces.IStatefulCollectionStatelessElement));
        global::SharedTypes.ComInterfaces.StatefulCollection<global::SharedTypes.ComInterfaces.StatelessType> __retVal = default;
        byte* __retVal_native = default;
        // Setup - Perform required setup.
        scoped global::SharedTypes.ComInterfaces.StatefulCollectionMarshaller<global::SharedTypes.ComInterfaces.StatelessType, nint>.Default __retVal_native__marshaller = new();
        int __retVal_native__numElements;
        System.Runtime.CompilerServices.Unsafe.SkipInit(out __retVal_native__numElements);
        try
        {
            {
                __retVal_native = ((delegate* unmanaged[MemberFunction]<void*, int, byte*> )__vtable_native[8])(__this, size);
            }

            System.GC.KeepAlive(this);
            // UnmarshalCapture - Capture the native data into marshaller instances in case conversion to managed data throws an exception.
            __retVal_native__marshaller.FromUnmanaged(__retVal_native);
            // Unmarshal - Convert native data to managed data.
            __retVal_native__numElements = size;
            {
                System.ReadOnlySpan<nint> __retVal_native__nativeSpan = __retVal_native__marshaller.GetUnmanagedValuesSource(__retVal_native__numElements);
                System.Span<global::SharedTypes.ComInterfaces.StatelessType> __retVal_native__managedSpan = __retVal_native__marshaller.GetManagedValuesDestination(__retVal_native__numElements);
                for (int __i0 = 0; __i0 < __retVal_native__numElements; ++__i0)
                {
                    __retVal_native__managedSpan[__i0] = global::SharedTypes.ComInterfaces.StatelessTypeMarshaller.ConvertToManaged(__retVal_native__nativeSpan[__i0]);
                }
            }

            __retVal = __retVal_native__marshaller.ToManaged();
        }
        finally
        {
            // Cleanup - Perform required cleanup.
            {
                System.ReadOnlySpan<nint> __retVal_native__nativeSpan = __retVal_native__marshaller.GetUnmanagedValuesDestination();
                for (int __i0 = 0; __i0 < __retVal_native__nativeSpan.Length; ++__i0)
                {
                    global::SharedTypes.ComInterfaces.StatelessTypeMarshaller.Free(__retVal_native__nativeSpan[__i0]);
                }
            }

            __retVal_native__marshaller.Free();
        }

        return __retVal;
    }
}

file unsafe partial interface InterfaceImplementation
{
    [System.Runtime.InteropServices.UnmanagedCallersOnlyAttribute(CallConvs = new[] { typeof(System.Runtime.CompilerServices.CallConvMemberFunction) })]
    internal static int ABI_Method(System.Runtime.InteropServices.ComWrappers.ComInterfaceDispatch* __this_native, byte* __p_native, int size)
    {
        global::SharedTypes.ComInterfaces.IStatefulCollectionStatelessElement @this = default;
        global::SharedTypes.ComInterfaces.StatefulCollection<global::SharedTypes.ComInterfaces.StatelessType> p = default;
        int __retVal = default;
        // Setup - Perform required setup.
        scoped global::SharedTypes.ComInterfaces.StatefulCollectionMarshaller<global::SharedTypes.ComInterfaces.StatelessType, nint>.Default __p_native__marshaller = new();
        int __p_native__numElements;
        System.Runtime.CompilerServices.Unsafe.SkipInit(out __p_native__numElements);
        try
        {
            // UnmarshalCapture - Capture the native data into marshaller instances in case conversion to managed data throws an exception.
            __p_native__marshaller.FromUnmanaged(__p_native);
            // Unmarshal - Convert native data to managed data.
            __retVal = 0; // S_OK
            __p_native__numElements = size;
            {
                System.ReadOnlySpan<nint> __p_native__nativeSpan = __p_native__marshaller.GetUnmanagedValuesSource(__p_native__numElements);
                System.Span<global::SharedTypes.ComInterfaces.StatelessType> __p_native__managedSpan = __p_native__marshaller.GetManagedValuesDestination(__p_native__numElements);
                for (int __i0 = 0; __i0 < __p_native__numElements; ++__i0)
                {
                    __p_native__managedSpan[__i0] = global::SharedTypes.ComInterfaces.StatelessTypeMarshaller.ConvertToManaged(__p_native__nativeSpan[__i0]);
                }
            }

            p = __p_native__marshaller.ToManaged();
            @this = System.Runtime.InteropServices.ComWrappers.ComInterfaceDispatch.GetInstance<global::SharedTypes.ComInterfaces.IStatefulCollectionStatelessElement>(__this_native);
            @this.Method(p, size);
        }
        catch (System.Exception __exception)
        {
            __retVal = System.Runtime.InteropServices.Marshalling.ExceptionAsHResultMarshaller<int>.ConvertToUnmanaged(__exception);
            return __retVal;
        }

        // Cleanup - Perform required cleanup.
        __p_native__marshaller.Free();
        return __retVal;
    }

    [System.Runtime.InteropServices.UnmanagedCallersOnlyAttribute(CallConvs = new[] { typeof(System.Runtime.CompilerServices.CallConvMemberFunction) })]
    internal static int ABI_MethodIn(System.Runtime.InteropServices.ComWrappers.ComInterfaceDispatch* __this_native, byte** __pIn_native__param, int* __size_native__param)
    {
        global::SharedTypes.ComInterfaces.IStatefulCollectionStatelessElement @this = default;
        byte* __pIn_native = *__pIn_native__param;
        global::SharedTypes.ComInterfaces.StatefulCollection<global::SharedTypes.ComInterfaces.StatelessType> pIn = default;
        int __size_native = *__size_native__param;
        int size = default;
        int __retVal = default;
        // Setup - Perform required setup.
        scoped global::SharedTypes.ComInterfaces.StatefulCollectionMarshaller<global::SharedTypes.ComInterfaces.StatelessType, nint>.Default __pIn_native__marshaller = new();
        int __pIn_native__numElements;
        System.Runtime.CompilerServices.Unsafe.SkipInit(out __pIn_native__numElements);
        try
        {
            // UnmarshalCapture - Capture the native data into marshaller instances in case conversion to managed data throws an exception.
            __pIn_native__marshaller.FromUnmanaged(__pIn_native);
            // Unmarshal - Convert native data to managed data.
            __retVal = 0; // S_OK
            size = __size_native;
            __pIn_native__numElements = size;
            {
                System.ReadOnlySpan<nint> __pIn_native__nativeSpan = __pIn_native__marshaller.GetUnmanagedValuesSource(__pIn_native__numElements);
                System.Span<global::SharedTypes.ComInterfaces.StatelessType> __pIn_native__managedSpan = __pIn_native__marshaller.GetManagedValuesDestination(__pIn_native__numElements);
                for (int __i0 = 0; __i0 < __pIn_native__numElements; ++__i0)
                {
                    __pIn_native__managedSpan[__i0] = global::SharedTypes.ComInterfaces.StatelessTypeMarshaller.ConvertToManaged(__pIn_native__nativeSpan[__i0]);
                }
            }

            pIn = __pIn_native__marshaller.ToManaged();
            @this = System.Runtime.InteropServices.ComWrappers.ComInterfaceDispatch.GetInstance<global::SharedTypes.ComInterfaces.IStatefulCollectionStatelessElement>(__this_native);
            @this.MethodIn(in pIn, in size);
        }
        catch (System.Exception __exception)
        {
            __retVal = System.Runtime.InteropServices.Marshalling.ExceptionAsHResultMarshaller<int>.ConvertToUnmanaged(__exception);
            return __retVal;
        }

        // Cleanup - Perform required cleanup.
        __pIn_native__marshaller.Free();
        return __retVal;
    }

    [System.Runtime.InteropServices.UnmanagedCallersOnlyAttribute(CallConvs = new[] { typeof(System.Runtime.CompilerServices.CallConvMemberFunction) })]
    internal static int ABI_MethodRef(System.Runtime.InteropServices.ComWrappers.ComInterfaceDispatch* __this_native, byte** __pRef_native__param, int size)
    {
        global::SharedTypes.ComInterfaces.IStatefulCollectionStatelessElement @this = default;
        byte* __pRef_native__out = default;
        byte* __pRef_native = *__pRef_native__param;
        global::SharedTypes.ComInterfaces.StatefulCollection<global::SharedTypes.ComInterfaces.StatelessType> pRef = default;
        int __retVal = default;
        // Setup - Perform required setup.
        scoped global::SharedTypes.ComInterfaces.StatefulCollectionMarshaller<global::SharedTypes.ComInterfaces.StatelessType, nint>.Default __pRef_native__marshaller = new();
        int __pRef_native__numElements;
        int __pRef_native__lastIndexMarshalled = 0;
        System.Runtime.CompilerServices.Unsafe.SkipInit(out __pRef_native__numElements);
        try
        {
            // UnmarshalCapture - Capture the native data into marshaller instances in case conversion to managed data throws an exception.
            __pRef_native__marshaller.FromUnmanaged(__pRef_native);
            // Unmarshal - Convert native data to managed data.
            __retVal = 0; // S_OK
            __pRef_native__numElements = size;
            {
                System.ReadOnlySpan<nint> __pRef_native__nativeSpan = __pRef_native__marshaller.GetUnmanagedValuesSource(__pRef_native__numElements);
                System.Span<global::SharedTypes.ComInterfaces.StatelessType> __pRef_native__managedSpan = __pRef_native__marshaller.GetManagedValuesDestination(__pRef_native__numElements);
                for (int __i0 = 0; __i0 < __pRef_native__numElements; ++__i0)
                {
                    __pRef_native__managedSpan[__i0] = global::SharedTypes.ComInterfaces.StatelessTypeMarshaller.ConvertToManaged(__pRef_native__nativeSpan[__i0]);
                }
            }

            pRef = __pRef_native__marshaller.ToManaged();
            @this = System.Runtime.InteropServices.ComWrappers.ComInterfaceDispatch.GetInstance<global::SharedTypes.ComInterfaces.IStatefulCollectionStatelessElement>(__this_native);
            @this.MethodRef(ref pRef, size);
            // Marshal - Convert managed data to native data.
            __pRef_native__marshaller.FromManaged(pRef);
            {
                System.ReadOnlySpan<global::SharedTypes.ComInterfaces.StatelessType> __pRef_native__managedSpan = __pRef_native__marshaller.GetManagedValuesSource();
                System.Span<nint> __pRef_native__nativeSpan = __pRef_native__marshaller.GetUnmanagedValuesDestination();
                for (int __i0 = 0; __i0 < __pRef_native__managedSpan.Length; ++__i0, ++__pRef_native__lastIndexMarshalled)
                {
                    __pRef_native__nativeSpan[__i0] = global::SharedTypes.ComInterfaces.StatelessTypeMarshaller.ConvertToUnmanaged(__pRef_native__managedSpan[__i0]);
                }
            }

            // PinnedMarshal - Convert managed data to native data that requires the managed data to be pinned.
            __pRef_native__out = __pRef_native__marshaller.ToUnmanaged();
        }
        catch (System.Exception __exception)
        {
            __retVal = System.Runtime.InteropServices.Marshalling.ExceptionAsHResultMarshaller<int>.ConvertToUnmanaged(__exception);
            // CleanupFailure - Perform required cleanup.
            {
                System.ReadOnlySpan<nint> __pRef_native__nativeSpan = __pRef_native__marshaller.GetUnmanagedValuesSource(__pRef_native__numElements);
                for (int __i0 = 0; __i0 < __pRef_native__lastIndexMarshalled; ++__i0)
                {
                    global::SharedTypes.ComInterfaces.StatelessTypeMarshaller.Free(__pRef_native__nativeSpan[__i0]);
                }
            }

            __pRef_native__marshaller.Free();
            return __retVal;
        }

        // AssignOut - Assign to parameters
        *__pRef_native__param = __pRef_native__out;
        // Cleanup - Perform required cleanup.
        {
            System.ReadOnlySpan<nint> __pRef_native__nativeSpan = __pRef_native__marshaller.GetUnmanagedValuesSource(__pRef_native__numElements);
            for (int __i0 = 0; __i0 < __pRef_native__lastIndexMarshalled; ++__i0)
            {
                global::SharedTypes.ComInterfaces.StatelessTypeMarshaller.Free(__pRef_native__nativeSpan[__i0]);
            }
        }

        __pRef_native__marshaller.Free();
        return __retVal;
    }

    [System.Runtime.InteropServices.UnmanagedCallersOnlyAttribute(CallConvs = new[] { typeof(System.Runtime.CompilerServices.CallConvMemberFunction) })]
    internal static int ABI_MethodOut(System.Runtime.InteropServices.ComWrappers.ComInterfaceDispatch* __this_native, byte** __pOut_native__param, int* __size_native__param)
    {
        global::SharedTypes.ComInterfaces.IStatefulCollectionStatelessElement @this = default;
        byte* __pOut_native__out = default;
        global::SharedTypes.ComInterfaces.StatefulCollection<global::SharedTypes.ComInterfaces.StatelessType> pOut = default;
        int __size_native__out = default;
        int size = default;
        int __retVal = default;
        // Setup - Perform required setup.
        scoped global::SharedTypes.ComInterfaces.StatefulCollectionMarshaller<global::SharedTypes.ComInterfaces.StatelessType, nint>.Default __pOut_native__marshaller = new();
        int __pOut_native__numElements;
        System.Runtime.CompilerServices.Unsafe.SkipInit(out __pOut_native__numElements);
        try
        {
            // Unmarshal - Convert native data to managed data.
            __retVal = 0; // S_OK
            @this = System.Runtime.InteropServices.ComWrappers.ComInterfaceDispatch.GetInstance<global::SharedTypes.ComInterfaces.IStatefulCollectionStatelessElement>(__this_native);
            @this.MethodOut(out pOut, out size);
            // Marshal - Convert managed data to native data.
            __size_native__out = size;
            __pOut_native__marshaller.FromManaged(pOut);
            {
                System.ReadOnlySpan<global::SharedTypes.ComInterfaces.StatelessType> __pOut_native__managedSpan = __pOut_native__marshaller.GetManagedValuesSource();
                System.Span<nint> __pOut_native__nativeSpan = __pOut_native__marshaller.GetUnmanagedValuesDestination();
                __pOut_native__nativeSpan.Clear();
                for (int __i0 = 0; __i0 < __pOut_native__managedSpan.Length; ++__i0)
                {
                    __pOut_native__nativeSpan[__i0] = global::SharedTypes.ComInterfaces.StatelessTypeMarshaller.ConvertToUnmanaged(__pOut_native__managedSpan[__i0]);
                }
            }

            // PinnedMarshal - Convert managed data to native data that requires the managed data to be pinned.
            __pOut_native__out = __pOut_native__marshaller.ToUnmanaged();
        }
        catch (System.Exception __exception)
        {
            __retVal = System.Runtime.InteropServices.Marshalling.ExceptionAsHResultMarshaller<int>.ConvertToUnmanaged(__exception);
            // CleanupFailure - Perform required cleanup.
            {
                System.ReadOnlySpan<nint> __pOut_native__nativeSpan = __pOut_native__marshaller.GetUnmanagedValuesSource(__pOut_native__numElements);
                for (int __i0 = 0; __i0 < __pOut_native__nativeSpan.Length; ++__i0)
                {
                    global::SharedTypes.ComInterfaces.StatelessTypeMarshaller.Free(__pOut_native__nativeSpan[__i0]);
                }
            }

            __pOut_native__marshaller.Free();
            return __retVal;
        }

        // AssignOut - Assign to parameters
        *__size_native__param = __size_native__out;
        *__pOut_native__param = __pOut_native__out;
        return __retVal;
    }

    [System.Runtime.InteropServices.UnmanagedCallersOnlyAttribute(CallConvs = new[] { typeof(System.Runtime.CompilerServices.CallConvMemberFunction) })]
    internal static int ABI_Return(System.Runtime.InteropServices.ComWrappers.ComInterfaceDispatch* __this_native, int size, byte** __invokeRetValUnmanaged__param)
    {
        global::SharedTypes.ComInterfaces.IStatefulCollectionStatelessElement @this = default;
        byte* __invokeRetValUnmanaged__out = default;
        global::SharedTypes.ComInterfaces.StatefulCollection<global::SharedTypes.ComInterfaces.StatelessType> __invokeRetVal = default;
        int __retVal = default;
        // Setup - Perform required setup.
        scoped global::SharedTypes.ComInterfaces.StatefulCollectionMarshaller<global::SharedTypes.ComInterfaces.StatelessType, nint>.Default __invokeRetValUnmanaged__marshaller = new();
        int __invokeRetValUnmanaged__numElements;
        System.Runtime.CompilerServices.Unsafe.SkipInit(out __invokeRetValUnmanaged__numElements);
        try
        {
            // Unmarshal - Convert native data to managed data.
            __retVal = 0; // S_OK
            @this = System.Runtime.InteropServices.ComWrappers.ComInterfaceDispatch.GetInstance<global::SharedTypes.ComInterfaces.IStatefulCollectionStatelessElement>(__this_native);
            __invokeRetVal = @this.Return(size);
            // Marshal - Convert managed data to native data.
            __invokeRetValUnmanaged__marshaller.FromManaged(__invokeRetVal);
            {
                System.ReadOnlySpan<global::SharedTypes.ComInterfaces.StatelessType> __invokeRetValUnmanaged__managedSpan = __invokeRetValUnmanaged__marshaller.GetManagedValuesSource();
                System.Span<nint> __invokeRetValUnmanaged__nativeSpan = __invokeRetValUnmanaged__marshaller.GetUnmanagedValuesDestination();
                __invokeRetValUnmanaged__nativeSpan.Clear();
                for (int __i0 = 0; __i0 < __invokeRetValUnmanaged__managedSpan.Length; ++__i0)
                {
                    __invokeRetValUnmanaged__nativeSpan[__i0] = global::SharedTypes.ComInterfaces.StatelessTypeMarshaller.ConvertToUnmanaged(__invokeRetValUnmanaged__managedSpan[__i0]);
                }
            }

            // PinnedMarshal - Convert managed data to native data that requires the managed data to be pinned.
            __invokeRetValUnmanaged__out = __invokeRetValUnmanaged__marshaller.ToUnmanaged();
        }
        catch (System.Exception __exception)
        {
            __retVal = System.Runtime.InteropServices.Marshalling.ExceptionAsHResultMarshaller<int>.ConvertToUnmanaged(__exception);
            // CleanupFailure - Perform required cleanup.
            {
                System.ReadOnlySpan<nint> __invokeRetValUnmanaged__nativeSpan = __invokeRetValUnmanaged__marshaller.GetUnmanagedValuesSource(__invokeRetValUnmanaged__numElements);
                for (int __i0 = 0; __i0 < __invokeRetValUnmanaged__nativeSpan.Length; ++__i0)
                {
                    global::SharedTypes.ComInterfaces.StatelessTypeMarshaller.Free(__invokeRetValUnmanaged__nativeSpan[__i0]);
                }
            }

            __invokeRetValUnmanaged__marshaller.Free();
            return __retVal;
        }

        // AssignOut - Assign to parameters
        *__invokeRetValUnmanaged__param = __invokeRetValUnmanaged__out;
        return __retVal;
    }

    [System.Runtime.InteropServices.UnmanagedCallersOnlyAttribute(CallConvs = new[] { typeof(System.Runtime.CompilerServices.CallConvMemberFunction) })]
    internal static byte* ABI_ReturnPreserveSig(System.Runtime.InteropServices.ComWrappers.ComInterfaceDispatch* __this_native, int size)
    {
        global::SharedTypes.ComInterfaces.IStatefulCollectionStatelessElement @this = default;
        global::SharedTypes.ComInterfaces.StatefulCollection<global::SharedTypes.ComInterfaces.StatelessType> __retVal = default;
        byte* __retVal_native = default;
        // Setup - Perform required setup.
        scoped global::SharedTypes.ComInterfaces.StatefulCollectionMarshaller<global::SharedTypes.ComInterfaces.StatelessType, nint>.Default __retVal_native__marshaller = new();
        int __retVal_native__numElements;
        int __retVal_native__lastIndexMarshalled = 0;
        System.Runtime.CompilerServices.Unsafe.SkipInit(out __retVal_native__numElements);
        try
        {
            // Unmarshal - Convert native data to managed data.
            @this = System.Runtime.InteropServices.ComWrappers.ComInterfaceDispatch.GetInstance<global::SharedTypes.ComInterfaces.IStatefulCollectionStatelessElement>(__this_native);
            __retVal = @this.ReturnPreserveSig(size);
            // Marshal - Convert managed data to native data.
            __retVal_native__marshaller.FromManaged(__retVal);
            {
                System.ReadOnlySpan<global::SharedTypes.ComInterfaces.StatelessType> __retVal_native__managedSpan = __retVal_native__marshaller.GetManagedValuesSource();
                System.Span<nint> __retVal_native__nativeSpan = __retVal_native__marshaller.GetUnmanagedValuesDestination();
                for (int __i0 = 0; __i0 < __retVal_native__managedSpan.Length; ++__i0, ++__retVal_native__lastIndexMarshalled)
                {
                    __retVal_native__nativeSpan[__i0] = global::SharedTypes.ComInterfaces.StatelessTypeMarshaller.ConvertToUnmanaged(__retVal_native__managedSpan[__i0]);
                }
            }

            // PinnedMarshal - Convert managed data to native data that requires the managed data to be pinned.
            __retVal_native = __retVal_native__marshaller.ToUnmanaged();
        }
        catch (System.Exception __exception)
        {
            __retVal_native = (byte*)System.Runtime.InteropServices.Marshalling.ExceptionAsDefaultMarshaller<System.IntPtr>.ConvertToUnmanaged(__exception);
            return __retVal_native;
        }

        // Cleanup - Perform required cleanup.
        __retVal_native__marshaller.Free();
        return __retVal_native;
    }
}

file unsafe partial interface InterfaceImplementation
{
    internal static void** CreateManagedVirtualFunctionTable()
    {
        void** vtable = (void**)System.Runtime.CompilerServices.RuntimeHelpers.AllocateTypeAssociatedMemory(typeof(global::SharedTypes.ComInterfaces.IStatefulCollectionStatelessElement), sizeof(void*) * 9);
        {
            nint v0, v1, v2;
            System.Runtime.InteropServices.ComWrappers.GetIUnknownImpl(out v0, out v1, out v2);
            vtable[0] = (void*)v0;
            vtable[1] = (void*)v1;
            vtable[2] = (void*)v2;
        }

        {
            vtable[3] = (void*)(delegate* unmanaged[MemberFunction]<System.Runtime.InteropServices.ComWrappers.ComInterfaceDispatch*, byte*, int, int> )&ABI_Method;
            vtable[4] = (void*)(delegate* unmanaged[MemberFunction]<System.Runtime.InteropServices.ComWrappers.ComInterfaceDispatch*, byte**, int*, int> )&ABI_MethodIn;
            vtable[5] = (void*)(delegate* unmanaged[MemberFunction]<System.Runtime.InteropServices.ComWrappers.ComInterfaceDispatch*, byte**, int, int> )&ABI_MethodRef;
            vtable[6] = (void*)(delegate* unmanaged[MemberFunction]<System.Runtime.InteropServices.ComWrappers.ComInterfaceDispatch*, byte**, int*, int> )&ABI_MethodOut;
            vtable[7] = (void*)(delegate* unmanaged[MemberFunction]<System.Runtime.InteropServices.ComWrappers.ComInterfaceDispatch*, int, byte**, int> )&ABI_Return;
            vtable[8] = (void*)(delegate* unmanaged[MemberFunction]<System.Runtime.InteropServices.ComWrappers.ComInterfaceDispatch*, int, byte*> )&ABI_ReturnPreserveSig;
        }

        return vtable;
    }
}

namespace SharedTypes.ComInterfaces
{
    [System.Runtime.InteropServices.Marshalling.IUnknownDerivedAttribute<InterfaceInformation, InterfaceImplementation>]
    partial interface IStatefulCollectionStatelessElement
    {
    }
}

namespace SharedTypes.ComInterfaces
{
    partial interface IStatefulCollectionStatelessElement
    {
    }
}