// <auto-generated />
#pragma warning disable CS0612, CS0618
file unsafe class InterfaceInformation : System.Runtime.InteropServices.Marshalling.IIUnknownInterfaceType
{
    public static System.Guid Iid { get; } = new(new System.ReadOnlySpan<byte>(new byte[] { 17, 194, 17, 190, 213, 118, 111, 73, 161, 23, 130, 245, 209, 50, 8, 247 }));

    private static void** _vtable;
    public static void** ManagedVirtualMethodTable => _vtable != null ? _vtable : (_vtable = InterfaceImplementation.CreateManagedVirtualFunctionTable());
}

[System.Runtime.InteropServices.DynamicInterfaceCastableImplementationAttribute]
file unsafe partial interface InterfaceImplementation : global::SharedTypes.ComInterfaces.MarshallingFails.IStringArrayMarshallingFails
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.ComInterfaceGenerator", "42.42.42.42")]
    [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
    void global::SharedTypes.ComInterfaces.MarshallingFails.IStringArrayMarshallingFails.Param(string[] value)
    {
        var(__this, __vtable_native) = ((System.Runtime.InteropServices.Marshalling.IUnmanagedVirtualMethodTableProvider)this).GetVirtualMethodTableInfoForKey(typeof(global::SharedTypes.ComInterfaces.MarshallingFails.IStringArrayMarshallingFails));
        nint* __value_native = default;
        int __invokeRetVal = default;
        // Setup - Perform required setup.
        scoped global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.ManagedToUnmanagedIn __value_native__marshaller = new();
        int __value_native__numElements;
        int __value_native__lastIndexMarshalled = 0;
        System.Runtime.CompilerServices.Unsafe.SkipInit(out __value_native__numElements);
        try
        {
            // Marshal - Convert managed data to native data.
            __value_native__marshaller.FromManaged(value, stackalloc nint[global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.ManagedToUnmanagedIn.BufferSize]);
            {
                System.ReadOnlySpan<string> __value_native__managedSpan = __value_native__marshaller.GetManagedValuesSource();
                System.Span<nint> __value_native__nativeSpan = __value_native__marshaller.GetUnmanagedValuesDestination();
                for (int __i0 = 0; __i0 < __value_native__managedSpan.Length; ++__i0, ++__value_native__lastIndexMarshalled)
                {
                    __value_native__nativeSpan[__i0] = global::SharedTypes.ComInterfaces.MarshallingFails.StringMarshallingFails.ConvertToUnmanaged(__value_native__managedSpan[__i0]);
                }
            }

            // Pin - Pin data in preparation for calling the P/Invoke.
            fixed (void* __value_native__unused = __value_native__marshaller)
            {
                // PinnedMarshal - Convert managed data to native data that requires the managed data to be pinned.
                __value_native = __value_native__marshaller.ToUnmanaged();
                __invokeRetVal = ((delegate* unmanaged[MemberFunction]<void*, nint*, int> )__vtable_native[3])(__this, __value_native);
            }

            System.GC.KeepAlive(this);
            // Unmarshal - Convert native data to managed data.
            System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(__invokeRetVal);
        }
        finally
        {
            // Cleanup - Perform required cleanup.
            _ = __value_native__lastIndexMarshalled;
            __value_native__marshaller.Free();
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.ComInterfaceGenerator", "42.42.42.42")]
    [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
    void global::SharedTypes.ComInterfaces.MarshallingFails.IStringArrayMarshallingFails.InParam(in string[] value)
    {
        var(__this, __vtable_native) = ((System.Runtime.InteropServices.Marshalling.IUnmanagedVirtualMethodTableProvider)this).GetVirtualMethodTableInfoForKey(typeof(global::SharedTypes.ComInterfaces.MarshallingFails.IStringArrayMarshallingFails));
        nint* __value_native = default;
        int __invokeRetVal = default;
        // Setup - Perform required setup.
        scoped global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.ManagedToUnmanagedIn __value_native__marshaller = new();
        int __value_native__numElements;
        int __value_native__lastIndexMarshalled = 0;
        System.Runtime.CompilerServices.Unsafe.SkipInit(out __value_native__numElements);
        try
        {
            // Marshal - Convert managed data to native data.
            __value_native__marshaller.FromManaged(value, stackalloc nint[global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.ManagedToUnmanagedIn.BufferSize]);
            {
                System.ReadOnlySpan<string> __value_native__managedSpan = __value_native__marshaller.GetManagedValuesSource();
                System.Span<nint> __value_native__nativeSpan = __value_native__marshaller.GetUnmanagedValuesDestination();
                for (int __i0 = 0; __i0 < __value_native__managedSpan.Length; ++__i0, ++__value_native__lastIndexMarshalled)
                {
                    __value_native__nativeSpan[__i0] = global::SharedTypes.ComInterfaces.MarshallingFails.StringMarshallingFails.ConvertToUnmanaged(__value_native__managedSpan[__i0]);
                }
            }

            // Pin - Pin data in preparation for calling the P/Invoke.
            fixed (void* __value_native__unused = __value_native__marshaller)
            {
                // PinnedMarshal - Convert managed data to native data that requires the managed data to be pinned.
                __value_native = __value_native__marshaller.ToUnmanaged();
                __invokeRetVal = ((delegate* unmanaged[MemberFunction]<void*, nint**, int> )__vtable_native[4])(__this, &__value_native);
            }

            System.GC.KeepAlive(this);
            // Unmarshal - Convert native data to managed data.
            System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(__invokeRetVal);
        }
        finally
        {
            // Cleanup - Perform required cleanup.
            _ = __value_native__lastIndexMarshalled;
            __value_native__marshaller.Free();
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.ComInterfaceGenerator", "42.42.42.42")]
    [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
    void global::SharedTypes.ComInterfaces.MarshallingFails.IStringArrayMarshallingFails.RefParam(ref string[] value)
    {
        var(__this, __vtable_native) = ((System.Runtime.InteropServices.Marshalling.IUnmanagedVirtualMethodTableProvider)this).GetVirtualMethodTableInfoForKey(typeof(global::SharedTypes.ComInterfaces.MarshallingFails.IStringArrayMarshallingFails));
        nint* __value_native = default;
        int __invokeRetVal = default;
        // Setup - Perform required setup.
        int __value_native__numElements;
        System.Runtime.CompilerServices.Unsafe.SkipInit(out __value_native__numElements);
        int __value_native__lastIndexMarshalled = 0;
        try
        {
            // Marshal - Convert managed data to native data.
            __value_native = global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.AllocateContainerForUnmanagedElements(value, out __value_native__numElements);
            {
                System.ReadOnlySpan<string> __value_native__managedSpan = global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.GetManagedValuesSource(value);
                System.Span<nint> __value_native__nativeSpan = global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.GetUnmanagedValuesDestination(__value_native, __value_native__numElements);
                for (int __i0 = 0; __i0 < __value_native__managedSpan.Length; ++__i0, ++__value_native__lastIndexMarshalled)
                {
                    __value_native__nativeSpan[__i0] = global::SharedTypes.ComInterfaces.MarshallingFails.StringMarshallingFails.ConvertToUnmanaged(__value_native__managedSpan[__i0]);
                }
            }

            {
                __invokeRetVal = ((delegate* unmanaged[MemberFunction]<void*, nint**, int> )__vtable_native[5])(__this, &__value_native);
            }

            System.GC.KeepAlive(this);
            // Unmarshal - Convert native data to managed data.
            System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(__invokeRetVal);
            __value_native__numElements = 10;
            value = global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.AllocateContainerForManagedElements(__value_native, __value_native__numElements);
            {
                System.ReadOnlySpan<nint> __value_native__nativeSpan = global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.GetUnmanagedValuesSource(__value_native, __value_native__numElements);
                System.Span<string> __value_native__managedSpan = global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.GetManagedValuesDestination(value);
                for (int __i0 = 0; __i0 < __value_native__numElements; ++__i0)
                {
                    __value_native__managedSpan[__i0] = global::SharedTypes.ComInterfaces.MarshallingFails.StringMarshallingFails.ConvertToManaged(__value_native__nativeSpan[__i0]);
                }
            }
        }
        finally
        {
            // Cleanup - Perform required cleanup.
            _ = __value_native__lastIndexMarshalled;
            __value_native__numElements = 10;
            global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.Free(__value_native);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.ComInterfaceGenerator", "42.42.42.42")]
    [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
    void global::SharedTypes.ComInterfaces.MarshallingFails.IStringArrayMarshallingFails.OutParam(out string[] value)
    {
        var(__this, __vtable_native) = ((System.Runtime.InteropServices.Marshalling.IUnmanagedVirtualMethodTableProvider)this).GetVirtualMethodTableInfoForKey(typeof(global::SharedTypes.ComInterfaces.MarshallingFails.IStringArrayMarshallingFails));
        System.Runtime.CompilerServices.Unsafe.SkipInit(out value);
        nint* __value_native = default;
        int __invokeRetVal = default;
        // Setup - Perform required setup.
        int __value_native__numElements;
        System.Runtime.CompilerServices.Unsafe.SkipInit(out __value_native__numElements);
        try
        {
            {
                __invokeRetVal = ((delegate* unmanaged[MemberFunction]<void*, nint**, int> )__vtable_native[6])(__this, &__value_native);
            }

            System.GC.KeepAlive(this);
            // Unmarshal - Convert native data to managed data.
            System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(__invokeRetVal);
            __value_native__numElements = 10;
            value = global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.AllocateContainerForManagedElements(__value_native, __value_native__numElements);
            {
                System.ReadOnlySpan<nint> __value_native__nativeSpan = global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.GetUnmanagedValuesSource(__value_native, __value_native__numElements);
                System.Span<string> __value_native__managedSpan = global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.GetManagedValuesDestination(value);
                for (int __i0 = 0; __i0 < __value_native__numElements; ++__i0)
                {
                    __value_native__managedSpan[__i0] = global::SharedTypes.ComInterfaces.MarshallingFails.StringMarshallingFails.ConvertToManaged(__value_native__nativeSpan[__i0]);
                }
            }
        }
        finally
        {
            // Cleanup - Perform required cleanup.
            __value_native__numElements = 10;
            global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.Free(__value_native);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.ComInterfaceGenerator", "42.42.42.42")]
    [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
    void global::SharedTypes.ComInterfaces.MarshallingFails.IStringArrayMarshallingFails.ByValueOutParam(string[] value)
    {
        var(__this, __vtable_native) = ((System.Runtime.InteropServices.Marshalling.IUnmanagedVirtualMethodTableProvider)this).GetVirtualMethodTableInfoForKey(typeof(global::SharedTypes.ComInterfaces.MarshallingFails.IStringArrayMarshallingFails));
        nint* __value_native = default;
        int __invokeRetVal = default;
        // Setup - Perform required setup.
        scoped global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.ManagedToUnmanagedIn __value_native__marshaller = new();
        int __value_native__numElements;
        System.Runtime.CompilerServices.Unsafe.SkipInit(out __value_native__numElements);
        try
        {
            // Marshal - Convert managed data to native data.
            __value_native__marshaller.FromManaged(value, stackalloc nint[global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.ManagedToUnmanagedIn.BufferSize]);
            __value_native__marshaller.GetUnmanagedValuesDestination().Clear();
            // Pin - Pin data in preparation for calling the P/Invoke.
            fixed (void* __value_native__unused = __value_native__marshaller)
            {
                // PinnedMarshal - Convert managed data to native data that requires the managed data to be pinned.
                __value_native = __value_native__marshaller.ToUnmanaged();
                __invokeRetVal = ((delegate* unmanaged[MemberFunction]<void*, nint*, int> )__vtable_native[7])(__this, __value_native);
            }

            System.GC.KeepAlive(this);
            // Unmarshal - Convert native data to managed data.
            System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(__invokeRetVal);
            {
                __value_native__numElements = __value_native__marshaller.GetManagedValuesSource().Length;
                System.Span<string> __value_native__managedSpan = System.Runtime.InteropServices.MemoryMarshal.CreateSpan(ref System.Runtime.CompilerServices.Unsafe.AsRef(in __value_native__marshaller.GetManagedValuesSource().GetPinnableReference()), __value_native__numElements);
                System.Span<nint> __value_native__nativeSpan = __value_native__marshaller.GetUnmanagedValuesDestination();
                for (int __i0 = 0; __i0 < __value_native__numElements; ++__i0)
                {
                    __value_native__managedSpan[__i0] = global::SharedTypes.ComInterfaces.MarshallingFails.StringMarshallingFails.ConvertToManaged(__value_native__nativeSpan[__i0]);
                }
            }
        }
        finally
        {
            // Cleanup - Perform required cleanup.
            __value_native__marshaller.Free();
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.ComInterfaceGenerator", "42.42.42.42")]
    [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
    void global::SharedTypes.ComInterfaces.MarshallingFails.IStringArrayMarshallingFails.ByValueInOutParam(string[] value)
    {
        var(__this, __vtable_native) = ((System.Runtime.InteropServices.Marshalling.IUnmanagedVirtualMethodTableProvider)this).GetVirtualMethodTableInfoForKey(typeof(global::SharedTypes.ComInterfaces.MarshallingFails.IStringArrayMarshallingFails));
        nint* __value_native = default;
        int __invokeRetVal = default;
        // Setup - Perform required setup.
        scoped global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.ManagedToUnmanagedIn __value_native__marshaller = new();
        int __value_native__numElements;
        int __value_native__lastIndexMarshalled = 0;
        System.Runtime.CompilerServices.Unsafe.SkipInit(out __value_native__numElements);
        try
        {
            // Marshal - Convert managed data to native data.
            __value_native__marshaller.FromManaged(value, stackalloc nint[global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.ManagedToUnmanagedIn.BufferSize]);
            {
                System.ReadOnlySpan<string> __value_native__managedSpan = __value_native__marshaller.GetManagedValuesSource();
                System.Span<nint> __value_native__nativeSpan = __value_native__marshaller.GetUnmanagedValuesDestination();
                for (int __i0 = 0; __i0 < __value_native__managedSpan.Length; ++__i0, ++__value_native__lastIndexMarshalled)
                {
                    __value_native__nativeSpan[__i0] = global::SharedTypes.ComInterfaces.MarshallingFails.StringMarshallingFails.ConvertToUnmanaged(__value_native__managedSpan[__i0]);
                }
            }

            // Pin - Pin data in preparation for calling the P/Invoke.
            fixed (void* __value_native__unused = __value_native__marshaller)
            {
                // PinnedMarshal - Convert managed data to native data that requires the managed data to be pinned.
                __value_native = __value_native__marshaller.ToUnmanaged();
                __invokeRetVal = ((delegate* unmanaged[MemberFunction]<void*, nint*, int> )__vtable_native[8])(__this, __value_native);
            }

            System.GC.KeepAlive(this);
            // Unmarshal - Convert native data to managed data.
            System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(__invokeRetVal);
            {
                __value_native__numElements = __value_native__marshaller.GetManagedValuesSource().Length;
                System.Span<string> __value_native__managedSpan = System.Runtime.InteropServices.MemoryMarshal.CreateSpan(ref System.Runtime.CompilerServices.Unsafe.AsRef(in __value_native__marshaller.GetManagedValuesSource().GetPinnableReference()), __value_native__numElements);
                System.Span<nint> __value_native__nativeSpan = __value_native__marshaller.GetUnmanagedValuesDestination();
                for (int __i0 = 0; __i0 < __value_native__numElements; ++__i0)
                {
                    __value_native__managedSpan[__i0] = global::SharedTypes.ComInterfaces.MarshallingFails.StringMarshallingFails.ConvertToManaged(__value_native__nativeSpan[__i0]);
                }
            }
        }
        finally
        {
            // Cleanup - Perform required cleanup.
            _ = __value_native__lastIndexMarshalled;
            __value_native__marshaller.Free();
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.ComInterfaceGenerator", "42.42.42.42")]
    [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
    string[] global::SharedTypes.ComInterfaces.MarshallingFails.IStringArrayMarshallingFails.ReturnValue()
    {
        var(__this, __vtable_native) = ((System.Runtime.InteropServices.Marshalling.IUnmanagedVirtualMethodTableProvider)this).GetVirtualMethodTableInfoForKey(typeof(global::SharedTypes.ComInterfaces.MarshallingFails.IStringArrayMarshallingFails));
        string[] __retVal = default;
        nint* __retVal_native = default;
        int __invokeRetVal = default;
        // Setup - Perform required setup.
        int __retVal_native__numElements;
        System.Runtime.CompilerServices.Unsafe.SkipInit(out __retVal_native__numElements);
        try
        {
            {
                __invokeRetVal = ((delegate* unmanaged[MemberFunction]<void*, nint**, int> )__vtable_native[9])(__this, &__retVal_native);
            }

            System.GC.KeepAlive(this);
            // Unmarshal - Convert native data to managed data.
            System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(__invokeRetVal);
            __retVal_native__numElements = 10;
            __retVal = global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.AllocateContainerForManagedElements(__retVal_native, __retVal_native__numElements);
            {
                System.ReadOnlySpan<nint> __retVal_native__nativeSpan = global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.GetUnmanagedValuesSource(__retVal_native, __retVal_native__numElements);
                System.Span<string> __retVal_native__managedSpan = global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.GetManagedValuesDestination(__retVal);
                for (int __i0 = 0; __i0 < __retVal_native__numElements; ++__i0)
                {
                    __retVal_native__managedSpan[__i0] = global::SharedTypes.ComInterfaces.MarshallingFails.StringMarshallingFails.ConvertToManaged(__retVal_native__nativeSpan[__i0]);
                }
            }
        }
        finally
        {
            // Cleanup - Perform required cleanup.
            __retVal_native__numElements = 10;
            global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.Free(__retVal_native);
        }

        return __retVal;
    }
}

file unsafe partial interface InterfaceImplementation
{
    [System.Runtime.InteropServices.UnmanagedCallersOnlyAttribute(CallConvs = new[] { typeof(System.Runtime.CompilerServices.CallConvMemberFunction) })]
    internal static int ABI_Param(System.Runtime.InteropServices.ComWrappers.ComInterfaceDispatch* __this_native, nint* __value_native)
    {
        global::SharedTypes.ComInterfaces.MarshallingFails.IStringArrayMarshallingFails @this = default;
        string[] value = default;
        int __retVal = default;
        // Setup - Perform required setup.
        int __value_native__numElements;
        System.Runtime.CompilerServices.Unsafe.SkipInit(out __value_native__numElements);
        try
        {
            // Unmarshal - Convert native data to managed data.
            __retVal = 0; // S_OK
            __value_native__numElements = 10;
            value = global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.AllocateContainerForManagedElements(__value_native, __value_native__numElements);
            {
                System.ReadOnlySpan<nint> __value_native__nativeSpan = global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.GetUnmanagedValuesSource(__value_native, __value_native__numElements);
                System.Span<string> __value_native__managedSpan = global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.GetManagedValuesDestination(value);
                for (int __i0 = 0; __i0 < __value_native__numElements; ++__i0)
                {
                    __value_native__managedSpan[__i0] = global::SharedTypes.ComInterfaces.MarshallingFails.StringMarshallingFails.ConvertToManaged(__value_native__nativeSpan[__i0]);
                }
            }

            @this = System.Runtime.InteropServices.ComWrappers.ComInterfaceDispatch.GetInstance<global::SharedTypes.ComInterfaces.MarshallingFails.IStringArrayMarshallingFails>(__this_native);
            @this.Param(value);
        }
        catch (System.Exception __exception)
        {
            __retVal = System.Runtime.InteropServices.Marshalling.ExceptionAsHResultMarshaller<int>.ConvertToUnmanaged(__exception);
            return __retVal;
        }

        return __retVal;
    }

    [System.Runtime.InteropServices.UnmanagedCallersOnlyAttribute(CallConvs = new[] { typeof(System.Runtime.CompilerServices.CallConvMemberFunction) })]
    internal static int ABI_InParam(System.Runtime.InteropServices.ComWrappers.ComInterfaceDispatch* __this_native, nint** __value_native__param)
    {
        global::SharedTypes.ComInterfaces.MarshallingFails.IStringArrayMarshallingFails @this = default;
        nint* __value_native = *__value_native__param;
        string[] value = default;
        int __retVal = default;
        // Setup - Perform required setup.
        int __value_native__numElements;
        System.Runtime.CompilerServices.Unsafe.SkipInit(out __value_native__numElements);
        try
        {
            // Unmarshal - Convert native data to managed data.
            __retVal = 0; // S_OK
            __value_native__numElements = 10;
            value = global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.AllocateContainerForManagedElements(__value_native, __value_native__numElements);
            {
                System.ReadOnlySpan<nint> __value_native__nativeSpan = global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.GetUnmanagedValuesSource(__value_native, __value_native__numElements);
                System.Span<string> __value_native__managedSpan = global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.GetManagedValuesDestination(value);
                for (int __i0 = 0; __i0 < __value_native__numElements; ++__i0)
                {
                    __value_native__managedSpan[__i0] = global::SharedTypes.ComInterfaces.MarshallingFails.StringMarshallingFails.ConvertToManaged(__value_native__nativeSpan[__i0]);
                }
            }

            @this = System.Runtime.InteropServices.ComWrappers.ComInterfaceDispatch.GetInstance<global::SharedTypes.ComInterfaces.MarshallingFails.IStringArrayMarshallingFails>(__this_native);
            @this.InParam(in value);
        }
        catch (System.Exception __exception)
        {
            __retVal = System.Runtime.InteropServices.Marshalling.ExceptionAsHResultMarshaller<int>.ConvertToUnmanaged(__exception);
            return __retVal;
        }

        return __retVal;
    }

    [System.Runtime.InteropServices.UnmanagedCallersOnlyAttribute(CallConvs = new[] { typeof(System.Runtime.CompilerServices.CallConvMemberFunction) })]
    internal static int ABI_RefParam(System.Runtime.InteropServices.ComWrappers.ComInterfaceDispatch* __this_native, nint** __value_native__param)
    {
        global::SharedTypes.ComInterfaces.MarshallingFails.IStringArrayMarshallingFails @this = default;
        nint* __value_native__out = default;
        nint* __value_native = *__value_native__param;
        string[] value = default;
        int __retVal = default;
        // Setup - Perform required setup.
        int __value_native__numElements;
        System.Runtime.CompilerServices.Unsafe.SkipInit(out __value_native__numElements);
        int __value_native__lastIndexMarshalled = 0;
        try
        {
            // Unmarshal - Convert native data to managed data.
            __retVal = 0; // S_OK
            __value_native__numElements = 10;
            value = global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.AllocateContainerForManagedElements(__value_native, __value_native__numElements);
            {
                System.ReadOnlySpan<nint> __value_native__nativeSpan = global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.GetUnmanagedValuesSource(__value_native, __value_native__numElements);
                System.Span<string> __value_native__managedSpan = global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.GetManagedValuesDestination(value);
                for (int __i0 = 0; __i0 < __value_native__numElements; ++__i0)
                {
                    __value_native__managedSpan[__i0] = global::SharedTypes.ComInterfaces.MarshallingFails.StringMarshallingFails.ConvertToManaged(__value_native__nativeSpan[__i0]);
                }
            }

            @this = System.Runtime.InteropServices.ComWrappers.ComInterfaceDispatch.GetInstance<global::SharedTypes.ComInterfaces.MarshallingFails.IStringArrayMarshallingFails>(__this_native);
            @this.RefParam(ref value);
            // Marshal - Convert managed data to native data.
            __value_native__out = global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.AllocateContainerForUnmanagedElements(value, out __value_native__numElements);
            {
                System.ReadOnlySpan<string> __value_native__managedSpan = global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.GetManagedValuesSource(value);
                System.Span<nint> __value_native__nativeSpan = global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.GetUnmanagedValuesDestination(__value_native__out, __value_native__numElements);
                for (int __i0 = 0; __i0 < __value_native__managedSpan.Length; ++__i0, ++__value_native__lastIndexMarshalled)
                {
                    __value_native__nativeSpan[__i0] = global::SharedTypes.ComInterfaces.MarshallingFails.StringMarshallingFails.ConvertToUnmanaged(__value_native__managedSpan[__i0]);
                }
            }
        }
        catch (System.Exception __exception)
        {
            __retVal = System.Runtime.InteropServices.Marshalling.ExceptionAsHResultMarshaller<int>.ConvertToUnmanaged(__exception);
            // Cleanup - Perform required cleanup.
            _ = __value_native__lastIndexMarshalled;
            __value_native__numElements = 10;
            global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.Free(__value_native__out);
            return __retVal;
        }

        // AssignOut - Assign to parameters
        *__value_native__param = __value_native__out;
        // Cleanup - Perform required cleanup.
        _ = __value_native__lastIndexMarshalled;
        __value_native__numElements = 10;
        global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.Free(__value_native);
        return __retVal;
    }

    [System.Runtime.InteropServices.UnmanagedCallersOnlyAttribute(CallConvs = new[] { typeof(System.Runtime.CompilerServices.CallConvMemberFunction) })]
    internal static int ABI_OutParam(System.Runtime.InteropServices.ComWrappers.ComInterfaceDispatch* __this_native, nint** __value_native__param)
    {
        global::SharedTypes.ComInterfaces.MarshallingFails.IStringArrayMarshallingFails @this = default;
        nint* __value_native__out = default;
        nint* __value_native = *__value_native__param;
        string[] value = default;
        int __retVal = default;
        // Setup - Perform required setup.
        int __value_native__numElements;
        System.Runtime.CompilerServices.Unsafe.SkipInit(out __value_native__numElements);
        try
        {
            // Unmarshal - Convert native data to managed data.
            __retVal = 0; // S_OK
            @this = System.Runtime.InteropServices.ComWrappers.ComInterfaceDispatch.GetInstance<global::SharedTypes.ComInterfaces.MarshallingFails.IStringArrayMarshallingFails>(__this_native);
            @this.OutParam(out value);
            // Marshal - Convert managed data to native data.
            __value_native__out = global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.AllocateContainerForUnmanagedElements(value, out __value_native__numElements);
            {
                System.ReadOnlySpan<string> __value_native__managedSpan = global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.GetManagedValuesSource(value);
                System.Span<nint> __value_native__nativeSpan = global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.GetUnmanagedValuesDestination(__value_native__out, __value_native__numElements);
                __value_native__nativeSpan.Clear();
                for (int __i0 = 0; __i0 < __value_native__managedSpan.Length; ++__i0)
                {
                    __value_native__nativeSpan[__i0] = global::SharedTypes.ComInterfaces.MarshallingFails.StringMarshallingFails.ConvertToUnmanaged(__value_native__managedSpan[__i0]);
                }
            }
        }
        catch (System.Exception __exception)
        {
            __retVal = System.Runtime.InteropServices.Marshalling.ExceptionAsHResultMarshaller<int>.ConvertToUnmanaged(__exception);
            return __retVal;
        }

        // AssignOut - Assign to parameters
        *__value_native__param = __value_native__out;
        return __retVal;
    }

    [System.Runtime.InteropServices.UnmanagedCallersOnlyAttribute(CallConvs = new[] { typeof(System.Runtime.CompilerServices.CallConvMemberFunction) })]
    internal static int ABI_ByValueOutParam(System.Runtime.InteropServices.ComWrappers.ComInterfaceDispatch* __this_native, nint* __value_native)
    {
        global::SharedTypes.ComInterfaces.MarshallingFails.IStringArrayMarshallingFails @this = default;
        string[] value = default;
        int __retVal = default;
        // Setup - Perform required setup.
        int __value_native__numElements;
        System.Runtime.CompilerServices.Unsafe.SkipInit(out __value_native__numElements);
        System.Span<nint> __value_native__out;
        try
        {
            // Unmarshal - Convert native data to managed data.
            __retVal = 0; // S_OK
            global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.GetManagedValuesDestination(value).Clear();
            @this = System.Runtime.InteropServices.ComWrappers.ComInterfaceDispatch.GetInstance<global::SharedTypes.ComInterfaces.MarshallingFails.IStringArrayMarshallingFails>(__this_native);
            @this.ByValueOutParam(value);
            // Marshal - Convert managed data to native data.
            {
                __value_native__numElements = global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.GetManagedValuesDestination(value).Length;
#pragma warning disable CS9081
                __value_native__out = stackalloc nint[__value_native__numElements];
#pragma warning restore CS9081
                System.Span<nint> __value_native__nativeSpan = __value_native__out;
                System.Span<string> __value_native__managedSpan = global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.GetManagedValuesDestination(value);
                for (int __i0 = 0; __i0 < __value_native__numElements; ++__i0)
                {
                    nint __value_native__nativeSpan____i0__original = __value_native__nativeSpan[__i0];
                    __value_native__nativeSpan[__i0] = global::SharedTypes.ComInterfaces.MarshallingFails.StringMarshallingFails.ConvertToUnmanaged(__value_native__managedSpan[__i0]);
                }
            }
        }
        catch (System.Exception __exception)
        {
            __retVal = System.Runtime.InteropServices.Marshalling.ExceptionAsHResultMarshaller<int>.ConvertToUnmanaged(__exception);
            return __retVal;
        }

        // AssignOut - Assign to parameters
        __value_native__out.CopyTo(System.Runtime.InteropServices.MemoryMarshal.CreateSpan(ref System.Runtime.CompilerServices.Unsafe.AsRef(in global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.GetUnmanagedValuesSource(__value_native, __value_native__numElements).GetPinnableReference()), __value_native__numElements));
        // Cleanup - Perform required cleanup.
        global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.Free(__value_native);
        return __retVal;
    }

    [System.Runtime.InteropServices.UnmanagedCallersOnlyAttribute(CallConvs = new[] { typeof(System.Runtime.CompilerServices.CallConvMemberFunction) })]
    internal static int ABI_ByValueInOutParam(System.Runtime.InteropServices.ComWrappers.ComInterfaceDispatch* __this_native, nint* __value_native)
    {
        global::SharedTypes.ComInterfaces.MarshallingFails.IStringArrayMarshallingFails @this = default;
        string[] value = default;
        int __retVal = default;
        // Setup - Perform required setup.
        int __value_native__numElements;
        System.Runtime.CompilerServices.Unsafe.SkipInit(out __value_native__numElements);
        System.Span<nint> __value_native__out;
        try
        {
            // Unmarshal - Convert native data to managed data.
            __retVal = 0; // S_OK
            __value_native__numElements = 10;
            value = global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.AllocateContainerForManagedElements(__value_native, __value_native__numElements);
            {
                System.ReadOnlySpan<nint> __value_native__nativeSpan = global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.GetUnmanagedValuesSource(__value_native, __value_native__numElements);
                System.Span<string> __value_native__managedSpan = global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.GetManagedValuesDestination(value);
                for (int __i0 = 0; __i0 < __value_native__numElements; ++__i0)
                {
                    __value_native__managedSpan[__i0] = global::SharedTypes.ComInterfaces.MarshallingFails.StringMarshallingFails.ConvertToManaged(__value_native__nativeSpan[__i0]);
                }
            }

            @this = System.Runtime.InteropServices.ComWrappers.ComInterfaceDispatch.GetInstance<global::SharedTypes.ComInterfaces.MarshallingFails.IStringArrayMarshallingFails>(__this_native);
            @this.ByValueInOutParam(value);
            // Marshal - Convert managed data to native data.
            {
                __value_native__numElements = global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.GetManagedValuesDestination(value).Length;
#pragma warning disable CS9081
                __value_native__out = stackalloc nint[__value_native__numElements];
#pragma warning restore CS9081
                System.Span<nint> __value_native__nativeSpan = __value_native__out;
                System.Span<string> __value_native__managedSpan = global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.GetManagedValuesDestination(value);
                for (int __i0 = 0; __i0 < __value_native__numElements; ++__i0)
                {
                    nint __value_native__nativeSpan____i0__original = __value_native__nativeSpan[__i0];
                    __value_native__nativeSpan[__i0] = global::SharedTypes.ComInterfaces.MarshallingFails.StringMarshallingFails.ConvertToUnmanaged(__value_native__managedSpan[__i0]);
                }
            }
        }
        catch (System.Exception __exception)
        {
            __retVal = System.Runtime.InteropServices.Marshalling.ExceptionAsHResultMarshaller<int>.ConvertToUnmanaged(__exception);
            return __retVal;
        }

        // AssignOut - Assign to parameters
        __value_native__out.CopyTo(System.Runtime.InteropServices.MemoryMarshal.CreateSpan(ref System.Runtime.CompilerServices.Unsafe.AsRef(in global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.GetUnmanagedValuesSource(__value_native, __value_native__numElements).GetPinnableReference()), __value_native__numElements));
        // Cleanup - Perform required cleanup.
        global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.Free(__value_native);
        return __retVal;
    }

    [System.Runtime.InteropServices.UnmanagedCallersOnlyAttribute(CallConvs = new[] { typeof(System.Runtime.CompilerServices.CallConvMemberFunction) })]
    internal static int ABI_ReturnValue(System.Runtime.InteropServices.ComWrappers.ComInterfaceDispatch* __this_native, nint** __invokeRetValUnmanaged__param)
    {
        global::SharedTypes.ComInterfaces.MarshallingFails.IStringArrayMarshallingFails @this = default;
        nint* __invokeRetValUnmanaged__out = default;
        nint* __invokeRetValUnmanaged = *__invokeRetValUnmanaged__param;
        string[] __invokeRetVal = default;
        int __retVal = default;
        // Setup - Perform required setup.
        int __invokeRetValUnmanaged__numElements;
        System.Runtime.CompilerServices.Unsafe.SkipInit(out __invokeRetValUnmanaged__numElements);
        try
        {
            // Unmarshal - Convert native data to managed data.
            __retVal = 0; // S_OK
            @this = System.Runtime.InteropServices.ComWrappers.ComInterfaceDispatch.GetInstance<global::SharedTypes.ComInterfaces.MarshallingFails.IStringArrayMarshallingFails>(__this_native);
            __invokeRetVal = @this.ReturnValue();
            // Marshal - Convert managed data to native data.
            __invokeRetValUnmanaged__out = global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.AllocateContainerForUnmanagedElements(__invokeRetVal, out __invokeRetValUnmanaged__numElements);
            {
                System.ReadOnlySpan<string> __invokeRetValUnmanaged__managedSpan = global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.GetManagedValuesSource(__invokeRetVal);
                System.Span<nint> __invokeRetValUnmanaged__nativeSpan = global::System.Runtime.InteropServices.Marshalling.ArrayMarshaller<string, nint>.GetUnmanagedValuesDestination(__invokeRetValUnmanaged__out, __invokeRetValUnmanaged__numElements);
                __invokeRetValUnmanaged__nativeSpan.Clear();
                for (int __i0 = 0; __i0 < __invokeRetValUnmanaged__managedSpan.Length; ++__i0)
                {
                    __invokeRetValUnmanaged__nativeSpan[__i0] = global::SharedTypes.ComInterfaces.MarshallingFails.StringMarshallingFails.ConvertToUnmanaged(__invokeRetValUnmanaged__managedSpan[__i0]);
                }
            }
        }
        catch (System.Exception __exception)
        {
            __retVal = System.Runtime.InteropServices.Marshalling.ExceptionAsHResultMarshaller<int>.ConvertToUnmanaged(__exception);
            return __retVal;
        }

        // AssignOut - Assign to parameters
        *__invokeRetValUnmanaged__param = __invokeRetValUnmanaged__out;
        return __retVal;
    }
}

file unsafe partial interface InterfaceImplementation
{
    internal static void** CreateManagedVirtualFunctionTable()
    {
        void** vtable = (void**)System.Runtime.CompilerServices.RuntimeHelpers.AllocateTypeAssociatedMemory(typeof(global::SharedTypes.ComInterfaces.MarshallingFails.IStringArrayMarshallingFails), sizeof(void*) * 10);
        {
            nint v0, v1, v2;
            System.Runtime.InteropServices.ComWrappers.GetIUnknownImpl(out v0, out v1, out v2);
            vtable[0] = (void*)v0;
            vtable[1] = (void*)v1;
            vtable[2] = (void*)v2;
        }

        {
            vtable[3] = (void*)(delegate* unmanaged[MemberFunction]<System.Runtime.InteropServices.ComWrappers.ComInterfaceDispatch*, nint*, int> )&ABI_Param;
            vtable[4] = (void*)(delegate* unmanaged[MemberFunction]<System.Runtime.InteropServices.ComWrappers.ComInterfaceDispatch*, nint**, int> )&ABI_InParam;
            vtable[5] = (void*)(delegate* unmanaged[MemberFunction]<System.Runtime.InteropServices.ComWrappers.ComInterfaceDispatch*, nint**, int> )&ABI_RefParam;
            vtable[6] = (void*)(delegate* unmanaged[MemberFunction]<System.Runtime.InteropServices.ComWrappers.ComInterfaceDispatch*, nint**, int> )&ABI_OutParam;
            vtable[7] = (void*)(delegate* unmanaged[MemberFunction]<System.Runtime.InteropServices.ComWrappers.ComInterfaceDispatch*, nint*, int> )&ABI_ByValueOutParam;
            vtable[8] = (void*)(delegate* unmanaged[MemberFunction]<System.Runtime.InteropServices.ComWrappers.ComInterfaceDispatch*, nint*, int> )&ABI_ByValueInOutParam;
            vtable[9] = (void*)(delegate* unmanaged[MemberFunction]<System.Runtime.InteropServices.ComWrappers.ComInterfaceDispatch*, nint**, int> )&ABI_ReturnValue;
        }

        return vtable;
    }
}

namespace SharedTypes.ComInterfaces.MarshallingFails
{
    [System.Runtime.InteropServices.Marshalling.IUnknownDerivedAttribute<InterfaceInformation, InterfaceImplementation>]
    internal partial interface IStringArrayMarshallingFails
    {
    }
}

namespace SharedTypes.ComInterfaces.MarshallingFails
{
    internal partial interface IStringArrayMarshallingFails
    {
    }
}